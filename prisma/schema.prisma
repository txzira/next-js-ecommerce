// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  firstName String
  lastName  String
  role      String
  password  String   @db.Char(60)
  verified  Boolean
  Orders    Order[]
}

model Product {
  id       Int     @id @default(autoincrement())
  name     String @unique
  price    Float
  active Boolean @default(true)
  order orderProduct[] 
}

model Image {
  assetId  String    @id
  publicId String
  url      String
  order Order[]
}
model orderProduct {
  orderId Int 
  order Order @relation(fields: [orderId], references: [id])
  productId Int
  product Product  @relation(fields:[productId], references: [id])
  pricePaidPer Float
  quantity Int
  @@id([orderId,productId])
  @@index([orderId])
  @@index([productId])
}

model Order {
  id         Int     @id @default(autoincrement())
  products   orderProduct[]
  amount     Float
  date       DateTime @default(now())
  customerId Int
  customer   User      @relation(fields: [customerId], references: [id])
  image    Image?   @relation(fields: [imageId], references: [assetId])
  imageId  String?
  isCash Boolean @default(false)
  approved Boolean @default(false)
  trackingNumber String?
  @@index([customerId])
  @@index([imageId])
}

model WalletAddress{
  id Int @id @default(autoincrement())
  address String
  active Boolean @default(false)
  type WalletType @relation(fields: [typeId], references: [id])
  typeId Int
  @@index([typeId])
  @@unique([address,typeId])
}

model WalletType{
  id Int @id @default(autoincrement())
  name String @unique
  wallets WalletAddress[]
}